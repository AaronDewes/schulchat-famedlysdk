variables:
  FLUTTER_VERSION: 3.10.6

# update deps and format files
.flutter_deps_and_format:
  before_script:
    - curl -s https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_IMAGE_TAG}-stable.tar.xz | tar xfJ - -C /tmp
    - export PATH="$PATH:/tmp/flutter/bin"
    - sed -i "s#git@git.fairkom.net:#https://gitlab-ci-token:$CI_JOB_TOKEN@git.fairkom.net/#g" pubspec.yaml
    - flutter pub get

flutter_analyze:
  extends:
    - .flutter_deps_and_format
  script: [flutter analyze --no-fatal-infos]

lint:
  extends:
    - .flutter_deps_and_format
  script:
    - dart pub run import_sorter:main --no-comments --exit-if-changed
    - dart format lib/ test/ --set-exit-if-changed

coverage:
  tags: [docker, rlp]
  script:
    #TODO install olm?
    - docker build -f docker/Dockerfile.coverage -t sdk-coverage --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA .
    - docker create --name coverage sdk-coverage
    - docker cp coverage:famedlysdk/coverage .
    - docker cp coverage:famedlysdk/coverage.xml .
    - docker cp coverage:famedlysdk/TEST-report.xml .
    - docker cp coverage:/tmp/test.exitcode .
    - docker rm coverage
    - exit $(< test.exitcode)
  coverage: /^\s*lines\.*:\s*\d+.\d+\%/
  artifacts:
    when: always
    paths:
      - coverage/
      - coverage.xml
      - TEST-report.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: TEST-report.xml

e2ee_test_synapse:
  tags: [docker, rlp]
  parallel:
    matrix:
      - HOMESERVER:
          - synapse
  script:
    - docker stop synapse || true
    - docker stop dockere2e || true
    - docker stop dummy || true
    - docker rm synapse || true #not sure if the job deletes the container if the job fails
    - docker rm dockere2e || true
    - docker rm dummy || true
    - docker volume rm synapse || true
    - docker build -f docker/Dockerfile.e2e -t docker-e2e --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA .
    - docker volume create synapse
     #something's broken, maybe docker:dind helps, but I'm unable to access the volume directory from the upper most container. So let's start a dummy container only for the purpose of copying the file...
     # permissions/users: https://github.com/element-hq/synapse/issues/16824
    - docker run --rm -d --volume=synapse:/mnt --name dummy debian:bullseye-slim sh -c 'chmod 0777 /mnt; while ! test -e /mnt/homeserver.yaml;do sleep 2;done' 
    - docker cp test_driver/synapse/data/localhost.log.config dummy:/mnt
    - docker cp test_driver/synapse/data/homeserver.yaml dummy:/mnt
    - docker run -d --volume=synapse:/data:rw --name synapse -p 80:8008 matrixdotorg/synapse:v1.98.0
    - docker run -d --name dockere2e -t docker-e2e
    - while [ -z $SYNAPSE_IP ];do export SYNAPSE_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' synapse);sleep 2;done
    #- export SYNAPSE_IP=$SYNAPSE_IP:8008
    - export SYNAPSE_IP=$SYNAPSE_IP:80
    - echo $SYNAPSE_IP
    - sed -i "s/notknownyet/$SYNAPSE_IP/g" docker/e2e.entrypoint
    - docker cp docker/e2e.entrypoint dockere2e:famedlysdk/entrypoint.sh
    - docker exec -i dockere2e ./entrypoint.sh
    - docker stop synapse
    - docker stop dockere2e
    - docker rm synapse || true
    - docker rm dockere2e || true
    - docker rm dummy || true
    - docker volume rm synapse || true
  timeout: 10m
